import { completeCartWorkflow } from "@medusajs/medusa/core-flows";
import { validateSolarFeasibilityWorkflow } from "./validate-solar-feasibility";
import type { CartDTO } from "@medusajs/framework/types";

/**
 * Hook: Validar viabilidade t√©cnica antes de concluir checkout
 * 
 * Integra com completeCartWorkflow do Medusa para bloquear
 * conclus√£o de pedidos solares que n√£o atendem requisitos t√©cnicos m√≠nimos.
 * 
 * Erros bloqueantes:
 * - Irradia√ß√£o solar < 3.5 kWh/m¬≤/dia
 * - √Årea de telhado insuficiente
 * - Capacidade < 1.5 kWp (invi√°vel economicamente)
 */
completeCartWorkflow.hooks.validate(
    async ({ cart }: { cart: CartDTO }) => {
        // Skip se n√£o √© carrinho solar
        if (cart.metadata?.tipo_produto !== "sistema_solar") {
            return;
        }

        // Executar workflow de valida√ß√£o
        const { result: validation } = await validateSolarFeasibilityWorkflow.run({
            input: { cart },
        });

        // Se n√£o √© vi√°vel, bloquear checkout
        if (!validation.is_feasible) {
            const errorMessage = [
                "üö´ Projeto solar n√£o vi√°vel. Checkout bloqueado:",
                "",
                ...validation.blocking_errors,
                "",
                "Por favor, ajuste os par√¢metros do projeto (capacidade, localiza√ß√£o, √°rea de telhado) antes de prosseguir.",
            ].join("\n");

            throw new Error(errorMessage);
        }

        // Se vi√°vel mas com warnings, adicionar ao metadata
        if (validation.warnings.length > 0) {
            cart.metadata = {
                ...cart.metadata,
                solar_feasibility_warnings: validation.warnings,
                solar_feasibility_validated_at: new Date().toISOString(),
                installation_complexity: validation.validation_details.installation_complexity,
                crane_required: validation.validation_details.crane_required,
            };
        }
    }
);