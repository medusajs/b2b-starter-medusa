PS C:\Users\fjuni\ysh_medusa> cd C:\Users\fjuni\ysh_medusa\ysh-store; Write-Host "`n=== AWS SSO Login Configuration ===" -ForegroundColor Cyan; Write-Host "`nAWS Access Portal: https://d-9066293405.awsapps.com/start" -ForegroundColor Green; Write-Host "Username: ysh-dev" -ForegroundColor Green; Write-Host "`nConfigurando AWS SSO...`n" -ForegroundColor Yellow

=== AWS SSO Login Configuration ===

AWS Access Portal: https://d-9066293405.awsapps.com/start
Username: ysh-dev

Configurando AWS SSO...

PS C:\Users\fjuni\ysh_medusa\ysh-store> aws configure sso --profile ysh-production
SSO session name (Recommended): 773235999227
SSO start URL [None]: https://d-9066293405.awsapps.com/start
SSO region [None]: us-east-1
SSO registration scopes [sso:account:access]: ysh
Attempting to automatically open the SSO authorization page in your default browser.
If the browser does not open, open the following URL:

https://oidc.us-east-1.amazonaws.com/authorize?response_type=code&client_id=Gv3t-PyhdWQSRURP9Oohu3VzLWVhc3QtMQ&redirect_uri=http%3A%2F%2F127.0.0.1%3A51575%2Foauth%2Fcallback&state=be03c555-7e91-43d6-a6f8-4229b8da6b84&code_challenge_method=S256&scopes=ysh&code_challenge=Kz9u5eSbYXAEdspssy_JVCZdHLY3E_uBCk5Ni1SNdB8

Error loading authorization code: Failed to retrieve an authorization code.
PS C:\Users\fjuni\ysh_medusa\ysh-store> $awsConfig = @"
>> [profile ysh-production]
>> sso_session = ysh-session
>> sso_account_id = 773235999227
>> sso_role_name = AdministratorAccess
>> region = us-east-1
>> output = json
>>
>> [sso-session ysh-session]
>> sso_start_url = https://d-9066293405.awsapps.com/start
>> sso_region = us-east-1
>> sso_registration_scopes = sso:account:access
>> "@; $configPath = "$env:USERPROFILE\.aws\config"; New-Item -Path (Split-Path $configPath) -ItemType Directory -Force | Out-Null; $awsConfig | Out-File -FilePath $configPath -Encoding utf8 -Force; Write-Host "`n AWS SSO config criado em: $configPath`n" -ForegroundColor Green; Get-Content $configPath

 AWS SSO config criado em: C:\Users\fjuni\.aws\config

[profile ysh-production]
sso_session = ysh-session
sso_account_id = 773235999227
sso_role_name = AdministratorAccess
region = us-east-1
output = json

[sso-session ysh-session]
sso_start_url = https://d-9066293405.awsapps.com/start
sso_region = us-east-1
sso_registration_scopes = sso:account:access
PS C:\Users\fjuni\ysh_medusa\ysh-store> Write-Host "`n Iniciando AWS SSO Login..." -ForegroundColor Cyan; Write-Host "Abrirá navegador para login. Use as credenciais:" -ForegroundColor Yellow; Write-Host "  Username: ysh-dev" -ForegroundColor Green; Write-Host "  Password: >NUSv^H<f*G#ti^GQO#e9u44uF>%x2IuU%L`n" -ForegroundColor Green;
 aws sso login --profile ysh-production

 Iniciando AWS SSO Login...
Abrirá navegador para login. Use as credenciais:
  Username: ysh-dev
  Password: >NUSv^H<f*G#ti^GQO#e9u44uF>%x2IuU%L


Unable to parse config file: C:\Users\fjuni/.aws/config
PS C:\Users\fjuni\ysh_medusa\ysh-store> $awsConfig = "[profile ysh-production]`nsso_session = ysh-session`nsso_account_id = 773235999227`nsso_role_name = AdministratorAccess`nregion = us-east-1`noutput = json`n`n[sso-session ysh-session]`nsso_start_url = https://d-9066293405.awsapps.com/start`nsso_region = us-east-1`nsso_registration_scopes = sso:account:access"; $configPath = "$env:USERPROFILE\.aws\config"; [System.IO.File]::WriteAllText($configPath, $awsConfig, [System.Text.Encoding]::ASCII); Write-Host "`n Config reescrito com encoding correto`n" -ForegroundColor Green; Get-Content $configPath

 Config reescrito com encoding correto

[profile ysh-production]
sso_session = ysh-session
sso_account_id = 773235999227
sso_role_name = AdministratorAccess
region = us-east-1
output = json

[sso-session ysh-session]
sso_start_url = https://d-9066293405.awsapps.com/start
sso_region = us-east-1
sso_registration_scopes = sso:account:access
PS C:\Users\fjuni\ysh_medusa\ysh-store> Write-Host "`n AWS SSO Login (tentativa 2)..." -ForegroundColor Cyan; Write-Host "`nQuando o navegador abrir, use:" -ForegroundColor Yellow; Write-Host "  URL: https://d-9066293405.awsapps.com/start" -ForegroundColor White; Write-Host "  Username: ysh-dev" -ForegroundColor Green; Write-Host "  Password: >NUSv^H<f*G#ti^GQO#e9u44uF>%x2IuU%L" -ForegroundColor Green; Write-Host "`nAguardando abertura do navegador...`n" -ForegroundColor Cyan; aws sso login --profile ysh-production

 AWS SSO Login (tentativa 2)...

Quando o navegador abrir, use:
  URL: https://d-9066293405.awsapps.com/start
  Username: ysh-dev
  Password: >NUSv^H<f*G#ti^GQO#e9u44uF>%x2IuU%L

Aguardando abertura do navegador...

Attempting to automatically open the SSO authorization page in your default browser.
If the browser does not open, open the following URL:

https://oidc.us-east-1.amazonaws.com/authorize?response_type=code&client_id=mAXj-CRQ_IdpK9An6djjfnVzLWVhc3QtMQ&redirect_uri=http%3A%2F%2F127.0.0.1%3A50540%2Foauth%2Fcallback&state=f9243ee6-1f65-4954-aad1-42620cd0add4&code_challenge_method=S256&scopes=sso%3Aaccount%3Aaccess&code_challenge=stR6k1JufW0gY5PZxxvFTmPr3jicWxIsE-n_SNKc2C8    
Successfully logged into Start URL: https://d-9066293405.awsapps.com/start
PS C:\Users\fjuni\ysh_medusa\ysh-store> Write-Host "`n Login SSO bem-sucedido!`n" -ForegroundColor Green; Write-Host "Verificando identidade AWS..." -ForegroundColor Cyan; aws sts get-caller-identity --profile ysh-production


 Login SSO bem-sucedido!

Verificando identidade AWS...
{
    "UserId": "AROA3ICDVAH5ZXQPPZO2U:ysh-dev",
    "Account": "773235999227",
    "Arn": "arn:aws:sts::773235999227:assumed-role/AWSReservedSSO_AdministratorAccess_c007a985b3eea5a7/ysh-dev" 
}

PS C:\Users\fjuni\ysh_medusa\ysh-store> $env:AWS_ACCOUNT_ID = "773235999227"; Write-Host "`n AWS Account ID: $env:AWS_ACCOUNT_ID" -ForegroundColor Green; Write-Host "`nTestando acesso aos serviços AWS...`n" -ForegroundColor Cyan; Write-Host "1 S3 Buckets:" -ForegroundColor Yellow; aws s3 ls --profile ysh-production 2>&1 | Select-Object -First 5; Write-Host "`n2 ECR Repositories:" -ForegroundColor Yellow; aws ecr describe-repositories --profile ysh-production --output json 2>&1 | ConvertFrom-Json | Select-Object -ExpandProperty repositories | Select-Object -First 3 repositoryName, createdAt | Format-Table

 AWS Account ID: 773235999227

Testando acesso aos serviços AWS...

1 S3 Buckets:
2025-09-30 08:15:29 cdk-hnb659fds-assets-773235999227-us-east-1

2 ECR Repositories:

repositoryName                                        createdAt
--------------                                        ---------
cdk-hnb659fds-container-assets-773235999227-us-east-1 2025-09-30T08:15:26.239000-03:00


PS C:\Users\fjuni\ysh_medusa\ysh-store> Write-Host "`n3 Região Configurada:" -ForegroundColor Yellow; aws configure get region --profile ysh-production; Write-Host "`n4 RDS Instances:" -ForegroundColor Yellow; $rds = aws rds describe-db-instances --profile ysh-production --output json 2>&1 | ConvertFrom-Json; if ($rds.DBInstances) { $rds.DBInstances | Select-Object -First 3 DBInstanceIdentifier, DBInstanceStatus, Engine | Format-Table } else { Write-Host "  Nenhuma instância RDS encontrada (ainda)" -ForegroundColor Gray }; Write-Host "`n" + "="*60 -ForegroundColor Cyan; Write-Host " CREDENCIAIS AWS CONFIGURADAS COM SUCESSO!" -ForegroundColor Green; Write-Host "="*60 -ForegroundColor Cyan; Write-Host "`n Resumo:" -ForegroundColor Yellow; Write-Host "  Profile: ysh-production" -ForegroundColor White; Write-Host "  Account ID: 773235999227" -ForegroundColor White; Write-Host "  Region: us-east-1" -ForegroundColor White; Write-Host "  User: ysh-dev (SSO)" -ForegroundColor White; Write-Host "  Role: AdministratorAccess" -ForegroundColor White; Write-Host "`n Serviços testados: S3 , ECR , RDS , STS " -ForegroundColor Green

3 Região Configurada:
us-east-1

4 RDS Instances:
  Nenhuma instância RDS encontrada (ainda)

 + = *60
 CREDENCIAIS AWS CONFIGURADAS COM SUCESSO!
= *60

 Resumo:
  Profile: ysh-production
  Account ID: 773235999227
  Region: us-east-1
  User: ysh-dev (SSO)
  Role: AdministratorAccess

 Serviços testados: S3 , ECR , RDS , STS
PS C:\Users\fjuni\ysh_medusa\ysh-store> Write-Host "`n Salvando AWS_ACCOUNT_ID permanentemente..." -ForegroundColor Cyan; Add-Content $PROFILE "`n# AWS Configuration`n`$env:AWS_ACCOUNT_ID = '773235999227'" -ErrorAction SilentlyContinue; Write-Host " Adicionado ao PowerShell profile`n" -ForegroundColor Green; Write-Host " PRÓXIMOS PASSOS:" -ForegroundColor Yellow; Write-Host "`n1 Criar infraestrutura AWS (RDS, S3, ECS):" -ForegroundColor White; Write-Host "   cd terraform && terraform init && terraform plan -var-file=free-tier.tfvars" -ForegroundColor Gray; Write-Host "`n2 Criar Secrets Manager (JWT, Cookie, DB):" -ForegroundColor White; Write-Host '   aws secretsmanager create-secret --name /ysh-b2b/jwt-secret --secret-string $(openssl rand -hex 32) --profile ysh-production' -ForegroundColor Gray; Write-Host "`n3 Build e Push Docker para ECR:" -ForegroundColor White; Write-Host "   .\scripts\deploy-aws.ps1 -Action build-backend" -ForegroundColor Gray; Write-Host "`n4 Deploy no ECS:" -ForegroundColor White; Write-Host "   .\scripts\deploy-aws.ps1 -Action deploy-ecs" -ForegroundColor Gray; Write-Host "`n Documentação:" -ForegroundColor Yellow; Write-Host "   - AWS_FREE_TIER_GUIDE.md (limites e custos)" -ForegroundColor Gray; Write-Host "   - PRODUCTION_ARCHITECTURE.md (arquitetura completa)" -ForegroundColor Gray; Write-Host "   - AWS_CREDENTIALS_SETUP_GUIDE.md (este guia)`n" -ForegroundColor Gray

 Salvando AWS_ACCOUNT_ID permanentemente...
 Adicionado ao PowerShell profile

 PRÓXIMOS PASSOS:

1 Criar infraestrutura AWS (RDS, S3, ECS):
   cd terraform && terraform init && terraform plan -var-file=free-tier.tfvars

2 Criar Secrets Manager (JWT, Cookie, DB):
   aws secretsmanager create-secret --name /ysh-b2b/jwt-secret --secret-string $(openssl rand -hex 32) --profile ysh-production

3 Build e Push Docker para ECR:
   .\scripts\deploy-aws.ps1 -Action build-backend

4 Deploy no ECS:
   .\scripts\deploy-aws.ps1 -Action deploy-ecs

 Documentação:
   - AWS_FREE_TIER_GUIDE.md (limites e custos)
   - PRODUCTION_ARCHITECTURE.md (arquitetura completa)
   - AWS_CREDENTIALS_SETUP_GUIDE.md (este guia)
