name: E2E Tests - Playwright

on:
    push:
        branches: [main, develop]
        paths:
            - "storefront/**"
            - ".github/workflows/e2e-tests.yml"
    pull_request:
        branches: [main, develop]
        paths:
            - "storefront/**"
    workflow_dispatch:

jobs:
    e2e-tests:
        name: E2E Tests (${{ matrix.project }})
        runs-on: ubuntu-latest
        timeout-minutes: 20

        strategy:
            fail-fast: false
            matrix:
                project: [chromium, firefox, webkit]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: storefront/package-lock.json

            - name: Install dependencies
              working-directory: ./storefront
              run: npm ci

            - name: Install Playwright browsers
              working-directory: ./storefront
              run: npx playwright install --with-deps ${{ matrix.project }}

            - name: Build application
              working-directory: ./storefront
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Run E2E tests
              working-directory: ./storefront
              run: npx playwright test --project=${{ matrix.project }}
              env:
                  CI: true
                  PLAYWRIGHT_BASE_URL: http://localhost:3000

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report-${{ matrix.project }}
                  path: storefront/playwright-report/
                  retention-days: 7

            - name: Upload test videos
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-videos-${{ matrix.project }}
                  path: storefront/test-results/
                  retention-days: 7

    e2e-mobile:
        name: E2E Mobile Tests
        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: storefront/package-lock.json

            - name: Install dependencies
              working-directory: ./storefront
              run: npm ci

            - name: Install Playwright browsers
              working-directory: ./storefront
              run: npx playwright install --with-deps chromium webkit

            - name: Build application
              working-directory: ./storefront
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Run Mobile E2E tests
              working-directory: ./storefront
              run: |
                  npx playwright test --project="Mobile Chrome"
                  npx playwright test --project="Mobile Safari"
              env:
                  CI: true
                  PLAYWRIGHT_BASE_URL: http://localhost:3000

            - name: Upload mobile test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: playwright-report-mobile
                  path: storefront/playwright-report/
                  retention-days: 7

    report:
        name: Publish Test Report
        needs: [e2e-tests, e2e-mobile]
        runs-on: ubuntu-latest
        if: always()

        steps:
            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: playwright-reports

            - name: Publish HTML Report
              uses: actions/upload-pages-artifact@v3
              with:
                  path: playwright-reports

            - name: Comment PR with results
              if: github.event_name == 'pull_request'
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      const reports = fs.readdirSync('playwright-reports');

                      let comment = '## ðŸŽ­ E2E Test Results\n\n';
                      comment += '| Browser | Status |\n';
                      comment += '|---------|--------|\n';

                      reports.forEach(report => {
                        const status = report.includes('chromium') ? 'âœ…' : 
                                      report.includes('firefox') ? 'âœ…' : 
                                      report.includes('webkit') ? 'âœ…' : 'ðŸ“±';
                        comment += `| ${report} | ${status} |\n`;
                      });

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: comment
                      });

    performance:
        name: Performance Tests
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: storefront/package-lock.json

            - name: Install dependencies
              working-directory: ./storefront
              run: npm ci

            - name: Install Playwright
              working-directory: ./storefront
              run: npx playwright install --with-deps chromium

            - name: Build application
              working-directory: ./storefront
              run: npm run build
              env:
                  NODE_ENV: production

            - name: Run performance tests
              working-directory: ./storefront
              run: |
                  npx playwright test --grep "Performance" --project=chromium
              env:
                  CI: true
                  PLAYWRIGHT_BASE_URL: http://localhost:3000

            - name: Upload performance results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: performance-report
                  path: storefront/playwright-report/
                  retention-days: 30
