name: Backend Tests & Quality Checks

on:
    push:
        branches: [main, develop]
        paths:
            - "backend/**"
            - ".github/workflows/backend-tests.yml"
    pull_request:
        branches: [main, develop]
        paths:
            - "backend/**"

jobs:
    test-and-lint:
        name: Tests, Lint & Security
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: medusa_test
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

            redis:
                image: redis:7-alpine
                ports:
                    - 6379:6379
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
                  cache-dependency-path: backend/package-lock.json

            - name: Install dependencies
              working-directory: ./backend
              run: npm ci

            - name: TypeScript Type Check
              working-directory: ./backend
              run: npm run typecheck
              continue-on-error: true

            - name: Lint Code
              working-directory: ./backend
              run: npm run lint
              continue-on-error: true

            - name: Format Check
              working-directory: ./backend
              run: npm run format:check
              continue-on-error: true

            - name: Run Unit Tests
              working-directory: ./backend
              env:
                  NODE_ENV: test
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/medusa_test
                  REDIS_URL: redis://localhost:6379
              run: npm run test:unit

            - name: Run Integration Tests - Modules
              working-directory: ./backend
              env:
                  NODE_ENV: test
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/medusa_test
                  REDIS_URL: redis://localhost:6379
              run: npm run test:integration:modules

            - name: Run Integration Tests - HTTP
              working-directory: ./backend
              env:
                  NODE_ENV: test
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/medusa_test
                  REDIS_URL: redis://localhost:6379
                  JWT_SECRET: test_secret
                  COOKIE_SECRET: test_cookie_secret
              run: npm run test:integration:http
              continue-on-error: true

            - name: Security Audit
              working-directory: ./backend
              run: npm audit --audit-level=high
              continue-on-error: true

            - name: Generate Coverage Report
              working-directory: ./backend
              env:
                  NODE_ENV: test
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/medusa_test
                  REDIS_URL: redis://localhost:6379
              run: npm run test:coverage
              continue-on-error: true

            - name: Upload Coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  directory: ./backend/coverage
                  flags: backend
                  name: backend-coverage
              continue-on-error: true

    build-check:
        name: Build Verification
        runs-on: ubuntu-latest
        needs: test-and-lint

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"
                  cache-dependency-path: backend/package-lock.json

            - name: Install dependencies
              working-directory: ./backend
              run: npm ci

            - name: Build Backend
              working-directory: ./backend
              run: npm run build

            - name: Check Build Artifacts
              working-directory: ./backend
              run: |
                  if [ ! -d ".medusa/server" ]; then
                    echo "Build failed: .medusa/server directory not found"
                    exit 1
                  fi
                  echo "Build successful: .medusa/server directory exists"
