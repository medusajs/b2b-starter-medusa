name: Visual Regression

on:
    pull_request:
        branches: [main, develop]
        paths:
            - "storefront/src/components/**"
            - "storefront/src/modules/**"
            - "storefront/.storybook/**"
            - ".github/workflows/visual-regression.yml"
    push:
        branches: [main]
    workflow_dispatch:

env:
    NODE_VERSION: "20"

jobs:
    # Build Storybook
    build-storybook:
        name: Build Storybook
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Required for Chromatic

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: storefront/package-lock.json

            - name: Install dependencies
              working-directory: storefront
              run: npm ci

            - name: Build Storybook
              working-directory: storefront
              run: npm run build-storybook

            - name: Upload Storybook Build
              uses: actions/upload-artifact@v4
              with:
                  name: storybook-build
                  path: storefront/storybook-static/
                  retention-days: 7

    # Chromatic Visual Tests
    chromatic:
        name: Chromatic Snapshots
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: storefront/package-lock.json

            - name: Install dependencies
              working-directory: storefront
              run: npm ci

            - name: Publish to Chromatic
              uses: chromaui/action@latest
              with:
                  projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
                  workingDir: storefront
                  buildScriptName: build-storybook
                  autoAcceptChanges: main
                  exitZeroOnChanges: true
                  exitOnceUploaded: false

            - name: Notify Node-RED
              if: always()
              run: |
                  curl -X POST "${{ secrets.NODERED_WEBHOOK_URL }}/trigger/visual-regression" \
                    -H "Content-Type: application/json" \
                    -d '{
                      "event": "chromatic_snapshot",
                      "status": "${{ job.status }}",
                      "ref": "${{ github.ref }}",
                      "sha": "${{ github.sha }}",
                      "pr": "${{ github.event.pull_request.number }}"
                    }'
              continue-on-error: true

    # Comment PR with Storybook Preview
    comment-pr:
        name: Comment PR
        runs-on: ubuntu-latest
        needs: [build-storybook, chromatic]
        if: github.event_name == 'pull_request'
        steps:
            - name: Comment PR with preview link
              uses: actions/github-script@v7
              with:
                  script: |
                      const output = `
                      ## üé® Visual Regression Results

                      **Status**: ${{ needs.chromatic.result == 'success' && '‚úÖ No visual changes' || '‚ö†Ô∏è Visual changes detected' }}

                      ### Storybook Preview
                      - üìö [View Storybook Build](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
                      - üîç [Review Chromatic Snapshots](https://www.chromatic.com/builds?appId=YOUR_APP_ID)

                      ### Components Tested
                      - ‚úÖ ProductCard (A/B variants)
                      - ‚úÖ ConsentBanner (4 states)
                      - ‚úÖ WebVitals (monitoring)
                      - ‚úÖ Other UI components
                      `;

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: output
                      });
