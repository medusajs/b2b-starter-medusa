name: Contract Testing

on:
    pull_request:
        branches: [main, develop]
        paths:
            - "storefront/src/lib/data/**"
            - "backend/src/api/**"
            - "backend/src/workflows/**"
            - ".github/workflows/contract-testing.yml"
    push:
        branches: [main]
    workflow_dispatch:

env:
    NODE_VERSION: "20"
    PACT_BROKER_URL: "http://localhost:9292"

jobs:
    # Consumer Tests (Storefront)
    consumer-tests:
        name: Pact Consumer Tests (Storefront)
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: storefront/package-lock.json

            - name: Install dependencies
              working-directory: storefront
              run: npm ci

            - name: Run Pact Consumer Tests
              working-directory: storefront
              run: npm run test:pact:consumer
              env:
                  PACT_BROKER_BASE_URL: ${{ secrets.PACT_BROKER_URL || env.PACT_BROKER_URL }}
                  PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}

            - name: Publish Pacts to Broker
              working-directory: storefront
              run: |
                  npx pact-broker publish ./pacts \
                    --consumer-app-version=${{ github.sha }} \
                    --tag=${{ github.ref_name }} \
                    --broker-base-url=${{ secrets.PACT_BROKER_URL || env.PACT_BROKER_URL }} \
                    --broker-token=${{ secrets.PACT_BROKER_TOKEN }}
              if: success()

            - name: Upload Pact files
              uses: actions/upload-artifact@v4
              with:
                  name: pacts-consumer
                  path: storefront/pacts/
                  retention-days: 7

    # Provider Tests (Backend)
    provider-tests:
        name: Pact Provider Tests (Backend)
        runs-on: ubuntu-latest
        needs: [consumer-tests]
        services:
            postgres:
                image: postgres:16-alpine
                env:
                    POSTGRES_DB: medusa-test
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

            redis:
                image: redis:7-alpine
                ports:
                    - 6379:6379
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "yarn"
                  cache-dependency-path: backend/yarn.lock

            - name: Install dependencies
              working-directory: backend
              run: yarn install --frozen-lockfile

            - name: Run migrations
              working-directory: backend
              run: yarn medusa db:migrate
              env:
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/medusa-test
                  REDIS_URL: redis://localhost:6379

            - name: Download Consumer Pacts
              uses: actions/download-artifact@v4
              with:
                  name: pacts-consumer
                  path: backend/pacts/

            - name: Run Pact Provider Tests
              working-directory: backend
              run: npm run test:pact:provider
              env:
                  DATABASE_URL: postgres://postgres:postgres@localhost:5432/medusa-test
                  REDIS_URL: redis://localhost:6379
                  PACT_BROKER_BASE_URL: ${{ secrets.PACT_BROKER_URL || env.PACT_BROKER_URL }}
                  PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}

            - name: Publish Verification Results
              working-directory: backend
              run: |
                  npx pact-broker record-deployment \
                    --pacticipant=medusa-backend \
                    --version=${{ github.sha }} \
                    --environment=${{ github.ref_name }} \
                    --broker-base-url=${{ secrets.PACT_BROKER_URL || env.PACT_BROKER_URL }} \
                    --broker-token=${{ secrets.PACT_BROKER_TOKEN }}
              if: success()

    # Can I Deploy?
    can-i-deploy:
        name: Pact Can-I-Deploy Check
        runs-on: ubuntu-latest
        needs: [consumer-tests, provider-tests]
        steps:
            - name: Check if safe to deploy
              run: |
                  npx pact-broker can-i-deploy \
                    --pacticipant=ysh-storefront \
                    --version=${{ github.sha }} \
                    --to-environment=production \
                    --broker-base-url=${{ secrets.PACT_BROKER_URL || env.PACT_BROKER_URL }} \
                    --broker-token=${{ secrets.PACT_BROKER_TOKEN }}

            - name: Notify Node-RED
              if: always()
              run: |
                  curl -X POST "${{ secrets.NODERED_WEBHOOK_URL }}/trigger/contract-test" \
                    -H "Content-Type: application/json" \
                    -d '{
                      "event": "pact_verification",
                      "status": "${{ job.status }}",
                      "ref": "${{ github.ref }}",
                      "sha": "${{ github.sha }}",
                      "pr": "${{ github.event.pull_request.number }}"
                    }'
              continue-on-error: true

    # Comment PR
    comment-pr:
        name: Comment PR with Contract Status
        runs-on: ubuntu-latest
        needs: [can-i-deploy]
        if: github.event_name == 'pull_request'
        steps:
            - name: Comment PR
              uses: actions/github-script@v7
              with:
                  script: |
                      const output = `
                      ## üìú Contract Testing Results

                      **Status**: ${{ needs.can-i-deploy.result == 'success' && '‚úÖ Contracts verified' || '‚ùå Contract breach detected' }}

                      ### Pact Verification
                      - ‚úÖ Consumer tests passed (Storefront)
                      - ‚úÖ Provider tests passed (Backend)
                      - ${{ needs.can-i-deploy.result == 'success' && '‚úÖ' || '‚ùå' }} Safe to deploy

                      ### Contracts Tested
                      - üõí Products API (list, search, get)
                      - üõçÔ∏è Cart API (create, add items, complete)
                      - üè¢ Company API (get, settings)
                      - ‚úÖ Approvals API (create, approve, reject)
                      - üöö Shipping API (options, methods)
                      - üí≥ Payment API (sessions, select)
                      - üì¶ Orders API (get details)

                      [View Pact Broker ‚Üí](${{ secrets.PACT_BROKER_URL || env.PACT_BROKER_URL }})
                      `;

                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: output
                      });
